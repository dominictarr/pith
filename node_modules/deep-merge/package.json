{
  "name": "deep-merge",
  "version": "0.1.3",
  "description": "Deep merge objects with custom merging logic",
  "keywords": [],
  "author": {
    "name": "Raynos",
    "email": "raynos2@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/Colingo/deep-merge.git"
  },
  "main": "index",
  "homepage": "https://github.com/Colingo/deep-merge",
  "contributors": [
    {
      "name": "Raynos"
    }
  ],
  "bugs": {
    "url": "https://github.com/Colingo/deep-merge/issues",
    "email": "raynos2@gmail.com"
  },
  "dependencies": {
    "xtend": "~1.0.3"
  },
  "devDependencies": {
    "tape": "~0.2.2",
    "browserify": "https://github.com/raynos/node-browserify/tarball/master",
    "testem": "~0.2.56"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/Colingo/deep-merge/raw/master/LICENSE"
    }
  ],
  "scripts": {
    "test": "node ./test",
    "build": "browserify test/index.js -o test/static/bundle.js",
    "testem": "testem"
  },
  "testling": {
    "files": "test/index.js",
    "browsers": {
      "ie": [
        "8",
        "9",
        "10"
      ],
      "firefox": [
        "16",
        "17",
        "nightly"
      ],
      "chrome": [
        "22",
        "23",
        "canary"
      ],
      "opera": [
        "12",
        "next"
      ],
      "safari": [
        "5.1"
      ],
      "iphone": [
        "6.0"
      ],
      "ipad": [
        "6.0"
      ]
    }
  },
  "readme": "# deep-merge\n\n[![build status][1]][2] [![dependency status][3]][4]\n\n[![browser support][5]][6]\n\nDeep merge objects with custom merging logic\n\n## Example\n\nWhen you create a merge \"strategy\" you can configure how two\nvalues should merge when they have the same key. For example\nyou may want them to be combined into a single array.\n\n```js\nvar DeepMerge = require(\"deep-merge\")\nvar assert = require(\"assert\")\n\nvar merge = DeepMerge(function mergeStrategy(target, source, key) {\n    return [].concat(target, source)\n})\n\nvar res = merge({\n    foo: [\"hello\"]\n}, {\n    foo: \"goodbye\"\n})\n\nassert.deepEqual(res, { foo: [\"hello\", \"goodbye\"] })\n```\n\nBy default objects will recursely call your `mergeStrategy` on\nyour the values for a key and construct a new object with the\nkey and the value returned from your merge\n\n## Installation\n\n`npm install deep-merge`\n\n## Contributors\n\n - Raynos\n\n## MIT Licenced\n\n  [1]: https://secure.travis-ci.org/Colingo/deep-merge.png\n  [2]: http://travis-ci.org/Colingo/deep-merge\n  [3]: http://david-dm.org/Colingo/deep-merge/status.png\n  [4]: http://david-dm.org/Colingo/deep-merge\n  [5]: http://ci.testling.com/Colingo/deep-merge.png\n  [6]: http://ci.testling.com/Colingo/deep-merge\n",
  "readmeFilename": "README.md",
  "_id": "deep-merge@0.1.3",
  "dist": {
    "shasum": "e636699c36539ca5697a17d58327442a3fd7ccf9"
  },
  "_from": "deep-merge@",
  "_resolved": "https://registry.npmjs.org/deep-merge/-/deep-merge-0.1.3.tgz"
}
