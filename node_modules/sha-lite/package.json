{
  "name": "sha-lite",
  "version": "0.1.2",
  "license": "MIT",
  "description": "Standard and secure cryptographic algorithms for browser",
  "main": "sha-lite.js",
  "author": {
    "name": "Lauri Rooden",
    "email": "lauri@rooden.ee"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/litejs/sha-lite.git"
  },
  "bugs": {
    "url": "https://github.com/litejs/sha-lite/issues"
  },
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "node test/run.js"
  },
  "keywords": [
    "crypto",
    "sha1",
    "sha256",
    "hmac",
    "pbkdf2"
  ],
  "readmeFilename": "README.md",
  "readme": "\n[1]: https://raw.github.com/litejs/sha-lite/master/sha-lite.js\n[2]: https://raw.github.com/litejs/sha-lite/master/sha-lite.min.js\n[3]: https://raw.github.com/litejs/sha-lite/master/test/test.html \"test/test.html\"\n[4]: http://nodejs.org/api/crypto.html\n\n\nStandard cryptographic algorithms\n=================================\n\nLite version of sha1, sha256, hmac, pbkdf2 writen in javascript.\nDownload [compressed][2] \n(2438 bytes or 1375 bytes gzipped)\nor [uncompressed][1] source.\n\n\n\n## How to use in browser\n\n```html\n<script src=sha-lite.js></script>\n\n<script>\nvar hash = \"secret\".sha1()\n</script>\n```\n\nSee [test.html][3] for more examples\n\n## How to use in node.js\n\nAlthough it should work in node.js, you should [use native][4] api there.\n\nnpm install sha-lite\n\n```javascript\nvar sha = require(\"sha-lite\")\n\n```\n\n\n### Licence\n\nCopyright (c) 2012 Lauri Rooden &lt;lauri@rooden.ee&gt;  \n[The MIT License](http://lauri.rooden.ee/mit-license.txt)\n\n\n",
  "_id": "sha-lite@0.1.2",
  "dist": {
    "shasum": "adcdb149af47d3bfbf8140a4c5b11c3daf4c4100"
  },
  "_from": "sha-lite@",
  "_resolved": "https://registry.npmjs.org/sha-lite/-/sha-lite-0.1.2.tgz"
}
